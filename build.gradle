// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.alibaba.arouter'

//这个是用来检测所有依赖的版本更新和人性化推荐版本，方便自己选择
apply plugin: "com.github.ben-manes.versions"

buildscript {
    apply from: 'versions.gradle'
    apply from: "githook.gradle"

    ext {
        lib_config = "${rootDir}/lib_config.gradle"
        module_config = "${rootDir}/module_config.gradle"
        secret = "${rootDir}/secret.gradle"
    }

    repositories {
        // 以下两行代码相当于有了 google() jcenter() mavenCentral()，使用国内的阿里镜像
        // 注意：开了梯子之后可能会变慢，pac模式可能也没有完全屏蔽，，如果有中国大陆白名单模式的话，应该可以
        // 可以使用这个网站测试 https://maven.aliyun.com/mvn/view 开了梯子之后你还能快速的进去 那么你的sync速度也会起飞
//        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        google()
        jcenter()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }

        maven { url 'https://dl.bintray.com/umsdk/release' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${gradle_plugins}"
        classpath deps.kotlin.gradle
        classpath "com.alibaba:arouter-register:1.0.2"
        //walle多渠道打包
        classpath 'com.meituan.android.walle:plugin:1.1.6'
        // 添加emas-services插件
        classpath 'com.aliyun.ams:emas-services:1.0.1'
        // AndResGuard
        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.17'
        //依赖版本检测
        classpath "com.github.ben-manes:gradle-versions-plugin:0.28.0"
    }


}

allprojects {
    repositories {
        // 以下两行代码相当于有了 google() jcenter() mavenCentral()，使用国内的阿里镜像
//        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
//        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }

        google()
        jcenter()
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }


        maven { url 'https://jitpack.io' }
        maven { url 'https://dl.bintray.com/umsdk/release' }
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// 运行这个可以检测依赖库的是否有最新发行版，请选择更新
// 如果要直接提升到最新版本，请自己做好新版适配准备，最好不要更新预览版或者测试版
// 因为依赖比较多通常需要分析30分钟左右，运行完毕会在
// 项目级的build的dependencyUpdates/report.json里面有输出文档
dependencyUpdates {
    revision = 'release'
    outputFormatter = 'json'
}